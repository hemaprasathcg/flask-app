# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool: 
   vmImage: ubuntu-latest

jobs:
- deployment: VMDeploy
  displayName: Deploy to VM
  environment: 
    name: test-build
    resourceType: virtualMachine
    resourceName: prestovmsiisolutions22
    tags: web,vm,linux # only deploy to virtual machines with both windows and prod tags
  strategy:
    runOnce:
      deploy:   
          steps:
          - task: DockerCompose@0
            displayName: 'Build services'
            inputs:
              containerregistrytype: 'Container Registry'
              dockerComposeFile: 'docker-compose.yml'
              action: 'Build services'
              # imageName: 'my-image'
              includeLatestTag: true

          - script: |
              docker-compose -f docker-compose.yml up -d
            displayName: 'Start services'

          - task: CmdLine@2
            displayName: 'Show Public IP'
            inputs:
              script: |
                wget -qO- http://ipecho.net/plain | xargs echo
          - script: |
              docker-compose -f docker-compose.yml run --rm web flask run
            displayName: 'Run tests'

          - script: |
              docker-compose -f docker-compose.yml down
            displayName: 'Stop services'
